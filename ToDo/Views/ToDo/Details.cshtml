@model ToDo


<h2>Details</h2>

<div class="alert alert-info">
    <h4>To Do Details</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Details)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Details)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Date)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Date)
        </dd>

        <dt class="col-sm-2">
            Is Done
        </dt>
        <dd class="col-sm-10">
            @if (Model.IsDone)
            {
                <span class="badge bg-success">Yes</span>
            }
            else
            {
                <span class="badge bg-danger">No</span>
            }
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Priority)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Priority)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Category)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ReminderDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ReminderDate)
        </dd>

        <dt class="col-sm-2">
            Is Recurring
        </dt>
        <dd class="col-sm-10">
            @if (Model.IsRecurring)
            {
                <span class="badge bg-info">Yes</span>
            }
            else
            {
                <span class="badge bg-secondary">No</span>
            }
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.RecurringInterval)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.RecurringInterval)
        </dd>
    </dl>
</div>

<div>
    <a asp-action="Index" class="btn btn-info">Back to List</a> |
    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
